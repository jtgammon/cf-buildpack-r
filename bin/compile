#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e
shopt -s extglob

# clean up leaking environment
unset GIT_DIR

# parse and derive params
BUILD_DIR=$1
CACHE_DIR="$2/vendor"
LP_DIR=`cd $(dirname $0); cd ..; pwd`
BUILDPACK_DIR="$(dirname $(dirname $0))"

# config
BUILD_PACK_VERSION="20130729"

GCC_VERSION="4.3"
GLIBC_VERSION="2.7"
R_VERSION="3.1.0"

S3_BUCKET="heroku-buildpack-r"
R_BINARIES="https://s3.amazonaws.com/r-buildpack/R-3.1.0-binaries-20140629-2201.tar.gz"
CRAN_MIRROR="http://cran.revolutionanalytics.com"
mkdir -p $CACHE_DIR

export VENDOR_DIR=/home/vcap/app/vendor
export R_HOME=/home/vcap/app/vendor/R

mkdir -p $VENDOR_DIR
curl $R_BINARIES -s -o r_binaries.tar.gz
tar xzf r_binaries.tar.gz -C $VENDOR_DIR
rm r_binaries.tar.gz

#cp -R $VENDOR_DIR/gcc-$GCC_VERSION /app/vendor/gcc-$GCC_VERSION
#cp -R $VENDOR_DIR/glibc-$GLIBC_VERSION /app/vendor/glibc-$GLIBC_VERSION
#cp -R $VENDOR_DIR/R /app/vendor/R

export PATH=$R_HOME/bin:$VENDOR_DIR/gcc-$GCC_VERSION/bin:$PATH
export LDFLAGS="-L$VENDOR_DIR/gcc-$GCC_VERSION/lib64/"
export CPPFLAGS="-I$VENDOR_DIR/glibc-$GLIBC_VERSION/string/ -I$VENDOR_DIR/glibc-$GLIBC_VERSION/time -I/usr/include/x86_64-linux-gnu/sys -I/usr/include/x86_64-linux-gnu/gnu"
export R_INCLUDE=$R_HOME/lib64/R/include
export LD_LIBRARY_PATH="/lib:/usr/lib:/usr/lib/x86_64-linux-gnu:$R_HOME/lib64:$LD_LIBRARY_PATH"
export LIBRARY_PATH="/lib:/usr/lib:/usr/lib/x86_64-linux-gnu:$R_HOME/lib64:$LD_LIBRARY_PATH"

ln -s /usr/lib/x86_64-linux-gnu/libreadline.so $R_HOME/lib64/libreadline.so.5 2>&1
ln -s /usr/lib/x86_64-linux-gnu/libmpfr.so.4.1.2 $R_HOME/lib64/libmpfr.so.1 2>&1
ln -s /usr/lib/x86_64-linux-gnu/libgmp.so.10.1.3 $R_HOME/lib64/libgmp.so.3 2>&1
ln -s /usr/lib/x86_64-linux-gnu/crti.o $R_HOME/lib64/crti.o 2>&1

cp /usr/include/x86_64-linux-gnu/* $R_INCLUDE
cp /usr/include/* $R_INCLUDE

export CPATH=/usr/lib/x86_64-linux-gnu:$R_INCLUDE

# copy over environment
mkdir -p $BUILD_DIR/.profile.d
cp "$BUILDPACK_DIR/bin/r_environment.sh" $BUILD_DIR/.profile.d/r_environment.sh


# prevent warnings
mkdir -p /app/vendor/R/lib64/R/doc/html
touch /app/vendor/R/lib64/R/doc/html/R.css

# set the CRAN mirror and run the init.r program
R -s <<RPROG
  Sys.setenv(BUILD_DIR="$BUILD_DIR")
  setwd("$BUILD_DIR")
  r <- getOption("repos");
  print(r)
  r["CRAN"] <- "$CRAN_MIRROR";
  options(repos=r);
  `cat $BUILD_DIR/init.r`
RPROG

echo "R $R_VERSION successfully installed" | indent

# need to copy binaries back so that any installed packages are included in the slug
# rm -rf $VENDOR_DIR && mkdir -p $VENDOR_DIR
# cp -R /app/vendor/gcc-$GCC_VERSION $VENDOR_DIR/gcc-$GCC_VERSION
# cp -R /app/vendor/glibc-$GLIBC_VERSION $VENDOR_DIR/glibc-$GLIBC_VERSION
# cp -R /app/vendor/R $VENDOR_DIR/R

# HACK
# cp $VENDOR_DIR/gcc-$GCC_VERSION/lib64/* $VENDOR_DIR/R/lib64/R/lib

# remove unneeded files to make slug smaller
# pushd $VENDOR_DIR/gcc-$GCC_VERSION > /dev/null && rm -rf !(lib64) && popd > /dev/null
# pushd $VENDOR_DIR/glibc-$GLIBC_VERSION > /dev/null && rm -rf !(string|time) && popd > /dev/null
